{"version":3,"file":"static/js/824.65ef6e59.chunk.js","mappings":"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","sources":["redux/contactsSlice/contactsSelectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","pages/Contacts.styled.js","pages/Contacts.jsx"],"sourcesContent":["export const getContacts = state => state.contacts.contacts.items;\nexport const getIsContacts =(state) => getContacts(state).length > 0;\nexport const getContactsFilter = state => state.contacts.filter;\n","import styled from '@emotion/styled';\nimport { Button } from '@mui/material';\n\nexport const BtnAdd = styled(Button)`\n  color: black;\n  border: 1px solid black;\n  border-radius: 12px;\n  &:hover {\n    border-color: black;\n    background-color: rgba(102, 102, 102, 0.1);\n  }\n`;\n","import { useState } from 'react';\nimport { addContact } from '../../redux/contactsSlice/operations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts } from '../../redux/contactsSlice/contactsSelectors';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport { BtnAdd } from './ContactForm.styled';\n\nfunction ContactForm() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    contacts.some(\n      contact => contact.name.trim().toLowerCase() === name.trim().toLowerCase()\n    )\n      ? alert(`${name} is already in contacts `)\n      : dispatch(addContact({ name, number }));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n  const theme = createTheme();\n\n  return (\n    <ThemeProvider theme={theme}>\n      {' '}\n      <Box\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        }}\n      >\n        <Box\n          onSubmit={handleSubmit}\n          component=\"form\"\n          noValidate\n          sx={{ mt: 1, width: '360px' }}\n        >\n          <TextField\n            type=\"text\"\n            name=\"name\"\n            id=\"name\"\n            value={name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            onChange={e => setName(e.target.value)}\n            margin=\"normal\"\n            fullWidth\n            placeholder=\"name\"\n            label=\"Name \"\n            autoComplete=\"Name\"\n            autoFocus\n            size=\"small\"\n          />\n\n          <TextField\n            type=\"tel\"\n            name=\"number\"\n            id=\"number\"\n            value={number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            margin=\"normal\"\n            fullWidth\n            placeholder=\"+380\"\n            label=\"Number \"\n            autoComplete=\"Number\"\n            autoFocus\n            size=\"small\"\n            onChange={e => setNumber(e.target.value)}\n          />\n          <BtnAdd\n            type=\"submit\"\n            fullWidth\n            variant=\"outline\"\n            sx={{ mt: 3, mb: 2 }}\n          >\n            Add contact\n          </BtnAdd>\n        </Box>\n      </Box>\n    </ThemeProvider>\n  );\n}\nexport default ContactForm;\n","import styled from '@emotion/styled';\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  max-width: 300px;\n  margin: 0 auto;\n  margin-top: 10px;\n  padding: 10px;\n`;\nexport const Item = styled.li`\n  margin-bottom: 5px;\n  display: flex;\n  justify-content: space-between;\n`;\nexport const Text = styled.p`\n  margin: 0;\n`;\nexport const Link = styled.a`\n  text-decoration: none;\n  margin-left: 5px;\n`;\nexport const Button = styled.button`\n  margin-left: 10px;\n  padding: 7px 15px;\n  border: none;\n  border-radius: 5px;\n  &:active {\n    background-color: blue;\n    color: white;\n  }\n`;\n","\nimport { useDispatch, useSelector } from 'react-redux';\nimport { removeContact } from '../../redux/contactsSlice/operations';\nimport {\n  getContacts,\n  getContactsFilter,\n} from '../../redux/contactsSlice/contactsSelectors';\nimport {List,Item, Text, Link, Button } from './ContactList.styled'\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n\n  const filter = useSelector(getContactsFilter);\n  const contacts = useSelector(getContacts);\n\n  const filterContact = () => {\n    const filterName = filter?.toLowerCase();\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filterName)\n    );\n  };\n\n  const filterContactList = filterContact();\n  return (\n    <List>\n      {filterContactList.map(({ id, name, number }) => (\n        <Item key={id} >\n          <Text>\n            {name}:\n            <Link href={`tel:${number}`}>\n              {number}\n            </Link>\n          </Text>\n          <Button\n            onClick={() => dispatch(removeContact(id))}\n         \n          >\n            Delete\n          </Button>\n        </Item>\n      ))}\n    </List>\n  );\n};\n\nexport default ContactList;\n","import { filterContact } from '../../redux/contactsSlice/contactsSlice';\nimport { getContactsFilter } from '../../redux/contactsSlice/contactsSelectors';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Box, TextField, Typography } from '@mui/material';\nconst Filter = () => {\n  const filter = useSelector(getContactsFilter);\n  const dispatch = useDispatch();\n  return (\n    <Box\n      sx={{\n        marginTop: 1,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n      }}\n    >\n      <Typography component=\"h3\"> Find contcts by name</Typography>\n\n      <TextField\n        size=\"small\"\n        name=\"filter\"\n        value={filter}\n        onChange={e => dispatch(filterContact(e.currentTarget.value))}\n      />\n    </Box>\n  );\n};\n\nexport default Filter;\n","import styled from '@emotion/styled';\nexport const Title = styled.h2`\n  text-align: center;\n  margin: 0;\n  font-family: sans-serif;\n  margin-top: 20px;\n`;\nexport const Container = styled.div`\n  margin: 0 auto;\n`;\n","import ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getToken } from 'redux/auth/authSelector/authSelector';\nimport { getIsContacts } from 'redux/contactsSlice/contactsSelectors';\nimport { fetchContact } from 'redux/contactsSlice/operations';\nimport { Title, Container } from './Contacts.styled';\nconst Contacts = () => {\n  const dispatch = useDispatch();\n\n  const contatsList = useSelector(getIsContacts);\n  const token = useSelector(getToken);\n\n  useEffect(() => {\n    token && dispatch(fetchContact());\n  }, [dispatch, token]);\n\n  return token ? (\n    <Container>\n      <Title>Phonebook</Title>\n      <ContactForm />\n      <Title>Contacts</Title>\n      <Filter />\n      {contatsList && <ContactList />}\n    </Container>\n  ) : (\n    <Title>Please login or register</Title>\n  );\n};\nexport default Contacts;\n//\n"],"names":["getContacts","state","contacts","items","getIsContacts","length","getContactsFilter","filter","BtnAdd","styled","Button","dispatch","useDispatch","useSelector","useState","name","setName","number","setNumber","reset","theme","createTheme","ThemeProvider","Box","sx","display","flexDirection","alignItems","onSubmit","e","preventDefault","some","contact","trim","toLowerCase","alert","addContact","component","noValidate","mt","width","TextField","type","id","value","pattern","title","required","onChange","target","margin","fullWidth","placeholder","label","autoComplete","autoFocus","size","variant","mb","List","Item","Text","Link","filterContactList","filterName","includes","filterContact","map","href","onClick","removeContact","marginTop","Typography","currentTarget","Title","Container","contatsList","token","getToken","useEffect","fetchContact"],"sourceRoot":""}